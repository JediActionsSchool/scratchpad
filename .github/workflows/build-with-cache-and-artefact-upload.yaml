name: Caching and Artifacts
run-name: Node.js CI - BUILD WITH CACHE AND ARTIFACTS

on:
  workflow_dispatch:
  push:

jobs:
  cache:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: app

    outputs:
      deps-cache-key: ${{ steps.cache-key.outputs.CACHE_KEY}}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Calculate Cache Key
        id: cache-key
        run: |
          echo "CACHE_KEY=${{ runner.os }}-npm-${{ hashFiles('app/package-lock.json')}}" >> $GITHUB_OUTPUT
          echo "CACHE_KEY=${{ runner.os }}-npm-${{ hashFiles('app/package-lock.json')}}" >> $GITHUB_STEP_SUMMARY

  install-dependencies:
    runs-on: ubuntu-latest
    needs: cache
    defaults:
      run:
        working-directory: app

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Cache Node Modules
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ needs.cache.outputs.deps-cache-key }}

      - name: Display Cache Output
        run: echo '${{ toJSON(steps.cache-dependencies.outputs) }}' >> $GITHUB_STEP_SUMMARY

      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != true
        run: npm install

      - name: Display Checkout Directory
        run: ls -la

  build:
    runs-on: ubuntu-latest
    needs: [cache, install-dependencies]
    defaults:
      run:
        working-directory: app

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Display Checkout Repo
        run: ls -la

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Cache Node Modules
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ needs.cache.outputs.deps-cache-key }}

      - name: Display Cache Output
        run: echo '${{ toJSON(steps.cache-dependencies.outputs) }}'

      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != true
        run: npm install

      - name: Build Project
        run: npm run build

  test:
    runs-on: ubuntu-latest
    needs: [cache, install-dependencies, build]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Display Checkout Repo
        working-directory: app/
        run: ls -la >> $GITHUB_STEP_SUMMARY

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Cache Node Modules
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ needs.cache.outputs.deps-cache-key }}

      - name: Display Cache Output
        run: echo '${{ toJSON(steps.cache-dependencies.outputs) }}'

      - name: Install Dependencies
        working-directory: app
        if: steps.cache-dependencies.outputs.cache-hit != true
        run: npm install

      - name: Run Tests
        working-directory: app
        run: npx jest

  upload-and-download-artefact:
    runs-on: ubuntu-latest
    needs: [cache, install-dependencies, build, test]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Display Checkout Repo
        working-directory: app/
        run: ls -la >> $GITHUB_STEP_SUMMARY

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Cache Node Modules
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ needs.cache.outputs.deps-cache-key }}

      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: code-coverage
          path: app/coverage
          retention-days: 10

      - name: Download Code Coverage
        uses: actions/download-artifact@v3
        with:
          name: code-coverage
          path: code-coverage-report

      - run: ls -a
        working-directory: code-coverage-report

      - name: Install Axios
        run: npm install axios

      - name: Use Axios
        uses: actions/github-script@v6
        with:
          script: |
            const axios = require('axios');
            const res = await axios('https://icanhazdadjoke.com/', { headers: { Accept: 'text/plain' } })
            console.log(res.data)
