name: Node.js CI - WITH CACHE

# Bu workflow ile "build-with-no-cache" workflow'unda kullanmadigimiz cache mekanizmasini kullanarak build islemini gerceklestirecegiz.
# Boylece, her seferinde node_modules klasorunu yeniden olusturmak yerine, cache mekanizmasi sayesinde daha hizli bir build islemi gerceklestirecegiz.

on:
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Restore from Cache
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: List Directory
        run: |
          echo "--- Home directory listing ---"
          ls -la
          cd app
          echo "--- App directory listing ---"
          ls -la

      - name: Use Node.js Latest
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Run Build
        run: |
          cd app
          npm ci

      - name: Npm Build
        run: |
          cd app
          npm run build --if-present

      - name: Save Cache Npm
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
